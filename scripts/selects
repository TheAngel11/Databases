-- MODUL CARTES --
-- 1. Enumerar el nom i el valor de dany de les cartes de tipus de tropa amb un valor de 
-- velocitat d’atac superior a 100 i el nom del qual contingui el caràcter "k".
/*Consulta*/
SELECT c.id_card_name, c.damage
FROM card AS C
JOIN troop AS t ON t.troop_name = c.id_card_name
WHERE c.attack_speed > 100 AND c.id_card_name LIKE '%k%'
ORDER BY c.damage DESC;
/*Validacio*/
-- 1r mirem que les cartes tinguin més de 100 de velocitat d'atac
SELECT c.id_card_name, c.attack_speed
FROM card AS c
JOIN troop AS t ON t.troop_name = c.id_card_name
WHERE c.attack_speed > 100 AND c.id_card_name LIKE '%k%';
-- 2n mirem quantes cartes tenen la lletra k que tinguin +100 de vel.atac i comprovem que dona 7
SELECT COUNT(t.troop_name)
FROM troop AS t
JOIN card AS c ON t.troop_name = c.id_card_name
WHERE t.troop_name LIKE '%k%' AND c.attack_speed > 100;

-- 2. Enumerar el valor de dany mitjà, el valor de dany 
-- màxim i el valor de dany mínim de les cartes èpiques.
/*Consulta*/
SELECT AVG(c.damage) AS avg_damage, MAX(c.damage) AS max_damage, MIN(c.damage) AS min_damage
FROM card AS c
JOIN rarity AS r ON  c.rarity = r.degree 
WHERE r.degree LIKE 'Epic';
/*Validacio*/
-- Falta validar

-- 3. Enumera el nom i la descripció de les piles i el nom de les cartes que tenen un nivell de 
-- carta més gran que el nivell mitjà de totes les cartes. Ordena els resultats segons el nom 
-- de les piles i el nom de les cartes de més a menys valor.
/*Consulta*/
SELECT DISTINCT s.name, s.description, c.id_card_name
FROM card AS c
JOIN "group" AS g ON g.card_name = c.id_card_name
JOIN stack AS s ON g.id_stack = s.id_stack
JOIN owns AS o ON o.card = c.id_card_name
JOIN level AS l ON l.level = o.level
WHERE l.level > (SELECT AVG(o.level) 
				 FROM owns AS o
				 JOIN card AS c ON c.id_card_name = o.card)
ORDER BY s.name, c.id_card_name;

/*Validacio*/
-- Falta validacio
-- PREGUNTES CREUADES --

-- 7. Indiqueu el nom dels jugadors que tenen 
-- totes les cartes amb el major valor de dany.
/*Consulta*/
SELECT player.name FROM player
WHERE player.id_player IN (
SELECT player FROM (
SELECT owns.player, COUNT(DISTINCT owns.card) AS number FROM owns
WHERE owns.card IN (SELECT id_card_name FROM card 
WHERE card.damage = (SELECT MAX(damage) FROM card))
GROUP BY owns.player
HAVING COUNT(DISTINCT owns.card) = (SELECT COUNT(id_card_name) FROM card
WHERE card.damage = (SELECT MAX(damage) FROM card))) AS player)
ORDER BY player.name;

/*Validacio*/
SELECT card.id_card_name
FROM card 
WHERE card.damage = 
(SELECT card.damage FROM card
ORDER BY card.damage DESC
LIMIT 1);

SELECT player.name 
FROM player
JOIN owns ON owns.player = player.id_player
JOIN card ON card.id_card_name = owns.card
WHERE card.id_card_name LIKE 'Fisherman'
ORDER BY player.name;


-- 8. Retorna el nom de les cartes i el dany, que pertanyen a les piles el nom de les quals 
-- conté la paraula "Madrid" i van ser creats per jugadors amb experiència superior a 
-- 150.000. Considereu només les cartes amb dany superior a 200 i els jugadors que van 
-- aconseguir un èxit en el 2021. Enumera el resultat des dels valors més alts del nom de 
-- la carta fins als valors més baixos del nom de la carta.
SELECT DISTINCT c.id_card_name AS name, c.damage AS damage
FROM card AS c
JOIN "group" AS g ON g.card_name = c.id_card_name
JOIN stack AS s ON g.id_stack = s.id_stack
JOIN player AS p ON p.id_player = s.id_player
JOIN obtains AS o ON p.id_player = o.id_player
WHERE s.name LIKE '%Madrid%' AND p.exp > 150000 AND c.damage > 200  --AND '2021' = EXTRACT(YEAR FROM obtains)     --strftime("%Y", o.date) = '2021' AND
ORDER BY c.id_card_name DESC;

SELECT * FROM owns

